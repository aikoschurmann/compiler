fn aggregate(
    acc: (const i64[]*, i64) -> i64,
    arr: i64[]
) -> i64 { }

fn generator(
    f: (i32) -> i64[],
    n: i32
) -> i64[] { }

fn curry(
    f: (i32) -> (i64) -> bool,
    x: i32
) -> (i64) -> bool { }

fn make_adder(base: i64) -> (i64, i64) -> i64 { }

fn dispatch(
    handlers: ((i64) -> i64)[]
) -> i64 { }

fn matrix_ops(
    ops: ((i32, i32) -> f32)[10][10]
) { }

fn safe_apply(
    f: const (i64) -> i64,
    x: i64
) -> i64 { }

fn mega(
    f: (i64) -> (i32) -> f64,
    g: (const bool[], i64) -> (i32) -> bool
) -> ((f64) -> i64) { }
