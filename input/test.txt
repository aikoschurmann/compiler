fn add(a: i32, b: i32) -> i32 {}

fn negate(x: i64) -> i64 {}

fn sum_array(arr: i32[], len: i32) -> i32 {}

fn make_buffer(size: i32) -> i32* {}

fn matrix_mul(a: i32[3][3], b: i32[3][3]) -> i32[3][3] {}

fn ptr_chain(x: i64***) -> i64*** {}

fn return_const(x: i32) -> i32 {}

fn mixed(p: i64*[], count: i32, flag: bool) -> i64[] {}

x: i32 = 42;

y: i64* = null;

arr: i32[10] = {};

big_arr: i64[1000] = {};

ptr_arr: i64*[100 + 100] = {};

nested_arr: i32[5][5] = {};

triple_ptr: i32*** = null;

dyn_arr: i32[] = {};

string: str = "test";

cst: const i64 = 123;

two_d_ptrs: i64*[] = {};

multi_ptr_array: i32**[50] = {};

const_arr: const i32[4] = {1, 2, 3, 4};

fn takes_const_ptr(p: i32*) -> i32 {}
